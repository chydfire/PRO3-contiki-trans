C51 COMPILER V9.54   A7139_COMM                                                            03/10/2017 11:11:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE A7139_COMM
OBJECT MODULE PLACED IN .\output\A7139_comm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source\USER\A7139\A7139_comm.c LARGE OPTIMIZE(8,SPEED) BROWSE MODC2 INCD
                    -IR(.\source\USER\A7139;.\source\USER\timer;.\source\USER\uart;.\source\USER\led;C:\Keil_v5\C51\INC\SONIX;.\source\USER\c
                    -lock;.\source\USER\inc;.\source\USER\rtimer;.\source\USER\cmd) DEBUG OBJECTEXTEND PRINT(.\Listings\A7139_comm.lst) TABS(
                    -2) OBJECT(.\output\A7139_comm.obj)

line level    source

   1          #include "A7139_comm.h"
   2          #include "A7139.h"
   3          #include "SN8F5708.h"
   4          #include "uart.h"
   5          #include "led.h"
   6          #include "cmd.h"
   7          
   8          uint8_t xdata rf_state_a7139 = RF_STATE_A7139_IDLE;
   9          uint8_t xdata a7139_irq_status = 0;
  10          
  11          
  12          
  13          uint8_t xdata bufSend[]=  {"A7139"};
  14          uint8_t xdata bufRecv[RF_RECV_BUF_LEN_MAX]={0};
  15          
  16          
  17          extern uint8_t xdata RxBuf[RF_RECV_BUF_LEN_MAX];
  18          uint8_t xdata a7139_tx[RF_RECV_BUF_LEN_MAX]={0};
  19          
  20          extern xdata uint8_t rf_tx_valid_flag;
  21          
  22          xdata uint8_t rf_retx_valid_flag = 0;
  23          
  24           
  25                                       
  26          //INT1 interrupt function
  27          void INT1Interrupt(void) interrupt ISRInt1 //
  28          { //IE0 clear by hardware
  29   1        a7139_irq_status = 1; 
  30   1      }
  31          
  32          //a7139 transmit a packet
  33          void a7139_tx_packet(uint8_t *s,uint8_t n)
  34          {
  35   1          A7139_StrobeCmd(CMD_STBY);
  36   1          clock_delay_ms(10);
  37   1          //send a tx packet
  38   1      //    A7139_WriteFIFO(s,7);
  39   1          A7139_WriteFIFO(s,n);
  40   1          A7139_StrobeCmd(CMD_TX);
  41   1          clock_delay_ms(10);//For some perform faster MCU, need time to wait at least more than 10 millisecond
  42   1          rf_state_a7139 =  RF_STATE_A7139_TX;
  43   1      }
  44          uint8_t chkSumCalc( const uint8_t * pData, uint8_t len )
  45          {
  46   1          uint8_t chksum = 0;
  47   1          uint8_t i = 0;
  48   1      
  49   1          for( i = 0; i < len; i++ )
  50   1          {
  51   2              chksum += pData[i];
  52   2          }
C51 COMPILER V9.54   A7139_COMM                                                            03/10/2017 11:11:23 PAGE 2   

  53   1      
  54   1          chksum = ~chksum + 1;
  55   1          return chksum;
  56   1      }
  57          int a7139_master()
  58          {
  59   1          int ret = TRUE;
  60   1          uint8_t rx_tmp = 0;
  61   1      
  62   1           //A7139 interrupt
  63   1           if(a7139_irq_status == 1)
  64   1           {
  65   2            switch(rf_state_a7139)
  66   2            {
  67   3              case RF_STATE_A7139_IDLE:
  68   3                A7139_ReadFIFO(bufRecv,sizeof(bufSend));
  69   3                A7139_StrobeCmd(CMD_RX);
  70   3                rf_state_a7139 = RF_STATE_A7139_RX;
  71   3                break;
  72   3              case RF_STATE_A7139_RX:
  73   3                A7139_ReadFIFO(bufRecv,sizeof(bufRecv));
  74   3                A7139_StrobeCmd(CMD_RX);                
  75   3              
  76   3                if(bufRecv[bufRecv[1]+2]==chkSumCalc(&bufRecv[1],bufRecv[1]+1))  //CRC 校验,高字节在前
  77   3                { 
  78   4                  if(bufRecv[2] == RF_NODE_ID)//节点地址
  79   4                  {
  80   5                    uart_send_string1(bufRecv,bufRecv[1]+3);//debug 
  81   5                    toggle_led_red;
  82   5                  }
  83   4                  else
  84   4                  {
  85   5                    if(bufRecv[3])
  86   5                    {
  87   6                      bufRecv[3]--;
  88   6                      bufRecv[bufRecv[1]+2]++;
  89   6                      rf_retx_valid_flag=1;
  90   6                    }
  91   5                  }
  92   4                }
  93   3                break;
  94   3              case RF_STATE_A7139_TX:
  95   3                //tx completed
  96   3                blink_led_blue;//debug      
  97   3                A7139_StrobeCmd(CMD_RX); //enter RX 
  98   3                clock_delay_ms(10);//For some perform faster MCU, need time to wait at least more than 10 millisecond
  99   3                rf_state_a7139 = RF_STATE_A7139_RX;       
 100   3                break;
 101   3            }
 102   2      
 103   2            a7139_irq_status = 0;
 104   2           }
 105   1           if(rf_retx_valid_flag)
 106   1          {
 107   2            clock_delay_ms(1000);
 108   2            a7139_tx_packet(bufRecv,bufRecv[1]+3);
 109   2            rf_retx_valid_flag = 0;
 110   2          }
 111   1           
 112   1           //uart received a packet
 113   1           if(rf_tx_valid_flag == 1)
 114   1           {
C51 COMPILER V9.54   A7139_COMM                                                            03/10/2017 11:11:23 PAGE 3   

 115   2             a7139_tx_packet(a7139_tx,a7139_tx[1]+3);
 116   2             
 117   2             rf_tx_valid_flag = 0;
 118   2           }
 119   1         return ret;
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     89      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
